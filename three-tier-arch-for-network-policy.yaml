apiVersion: v1
kind: Pod
metadata:
  name: frontend-pod
  labels:
    role: frontend
spec:
  containers:
    - name: frontend-nginx-container
      image: nginx
      ports:
        - containerPort: 80 #port on which application will run

---
# clusterip service for frontend pod
apiVersion: v1
kind: Service
metadata:
  name: frontend-pod-service
  labels:
    role: frontend
spec:
  type: ClusterIP
  selector:
    role: frontend # service for pod which has label: role=frontend
  ports:
    - port: 30007 # exposing port
      targetPort: 80 #container port
---
apiVersion: v1
kind: Pod
metadata:
  name: backend-pod
  labels:
    role: backend
spec:
  containers:
    - name: backend-nginx-container
      image: nginx
      ports:
        - containerPort: 80 #port on which application will run

---
# clusterip service for frontend pod
apiVersion: v1
kind: Service
metadata:
  name: backend-pod-service
  labels:
    role: backend
spec:
  type: ClusterIP
  selector:
    role: backend # service for pod which has label: role=backend
  ports:
    - port: 30008 # exposing port
      targetPort: 80 #container port
---
apiVersion: v1
kind: Pod
metadata:
  name: mysql-pod
  labels:
    role: mysql
spec:
  containers:
    - name: mysql-container
      image: mysql
      env:
        - name: "MYSQL_USER"
          value: "mysql"
        - name: "MYSQL_PASSWORD"
          value: "mysql"
        - name: "MYSQL_DATABASE"
          value: "testdb"
        - name: "MYSQL_ROOT_PASSWORD"
          value: "verysecure"
      ports:
        - containerPort: 3306

---
apiVersion: v1
kind: Service
metadata:
  name: mysql-pod-service
  labels:
    role: mysql
spec:
  type: ClusterIP
  selector:
    role: mysql
  ports:
    - port: 30009 # exposing port
      targetPort: 3306 #container port
